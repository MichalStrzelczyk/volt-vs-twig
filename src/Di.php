<?php
declare (strict_types=1);

class Di extends \Phalcon\Di {
    /**
     * @param string $name
     * @param null $parameters
     *
     * @return mixed
     */
    public function get($name, $parameters = null) {
        if (!$this->has($name)) {
            // Check if builders is added
            $paths = \explode('\\', $name);
            $previousPath = [];
            $di = $this;

            foreach ($paths as $path) {
                $builderPath = \implode(DIRECTORY_SEPARATOR, $previousPath);
                $fileName = \ucfirst($path).'.php';
                \count($previousPath) > 0 and $builderPath .= DIRECTORY_SEPARATOR;
                $filePath = SRC_PATH . DIRECTORY_SEPARATOR . 'Builder' . DIRECTORY_SEPARATOR . $builderPath . $fileName;
                if (\is_readable($filePath)) {
                    require_once $filePath;
                }

                $previousPath[] = $path;
            }
        }

        return parent::get($name, $parameters); // TODO: Change the autogenerated stub
    }
}